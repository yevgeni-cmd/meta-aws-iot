services:
  build:
    image: ubuntu:22.04
    container_name: yocto
    platform: linux/amd64
    working_dir: /app
    env_file:
      - .env
    environment:
      REPO_URL: ${REPO_URL}
      DEVICE: ${DEVICE}
      IMAGE: ${IMAGE}
      DISTRO: ${DISTRO}
      DEVICE_CONF: ${DEVICE_CONF}
      DEVICE_LAYERS: ${DEVICE_LAYERS}
      IMAGE_LAYERS: ${IMAGE_LAYERS}
      DEBIAN_FRONTEND: noninteractive
    tty: true
    stdin_open: true
    command: >
      bash -c "
        echo '=== Checking environment variables ==='
        [ -z \"$REPO_URL\" ] && { echo 'ERROR: REPO_URL is missing'; exit 1; }
        [ -z \"$DEVICE\" ] && { echo 'ERROR: DEVICE is missing'; exit 1; }
        [ -z \"$IMAGE\" ] && { echo 'ERROR: IMAGE is missing'; exit 1; }
        [ -z \"$DISTRO\" ] && { echo 'ERROR: DISTRO is missing'; exit 1; }
        [ -z \"$DEVICE_CONF\" ] && { echo 'ERROR: DEVICE_CONF is missing'; exit 1; }
        [ -z \"$DEVICE_LAYERS\" ] && { echo 'ERROR: DEVICE_LAYERS is missing'; exit 1; }
        [ -z \"$IMAGE_LAYERS\" ] && { echo 'ERROR: IMAGE_LAYERS is missing'; exit 1; }

        echo '=== Installing dependencies ==='
        apt-get update && apt-get install -y --no-install-recommends \\
          gawk wget git diffstat unzip texinfo gcc build-essential \\
          chrpath socat cpio python3 python3-pip python3-pexpect xz-utils \\
          debianutils iputils-ping python3-git python3-jinja2 libegl1-mesa \\
          libsdl1.2-dev pylint python3-subunit mesa-common-dev zstd \\
          liblz4-tool file locales ca-certificates \\
          || { echo 'Package install failed'; exit 1; }

        echo '=== Configuring locales ==='
        locale-gen en_US.UTF-8
        export LANG=en_US.UTF-8

        echo '=== Creating yocto user ==='
        useradd -m -s /bin/bash yocto || echo 'User already exists'

        echo '=== Cloning repository ==='
        git clone --progress \"$REPO_URL\" repo || { echo 'Git clone failed'; exit 1; }
        cd repo
        git config --global --add safe.directory /app/repo
        git submodule update --init --recursive || echo 'Submodule update failed'

        echo '=== Setting up Yocto build environment ==='
        [ ! -d poky ] && { echo 'ERROR: poky directory not found'; ls -la; exit 1; }

        echo '=== Running build as yocto user ==='
        su yocto -c '
          cd /app/repo
          export PATH=\"/home/yocto/.local/bin:$PATH\"
          echo \"=== Initializing build ===\"
          source ./poky/oe-init-build-env build || { echo \"Failed to initialize Yocto\"; exit 1; }
          echo \"=== Configuring layers ===\"
          cp ../meta-aws-iot/conf/templates/default/local.conf.sample build/conf/local.conf || echo \"Failed to copy local.conf\"
          cp ../meta-aws-iot/conf/templates/default/bblayers.conf.sample build/conf/bblayers.conf || echo \"Failed to copy bblayers.conf\"
          [ -f \"$DEVICE_CONF\" ] && [ -s \"$DEVICE_CONF\" ] && cat \"$DEVICE_CONF\" >> build/conf/local.conf || echo \"Skipping DEVICE_CONF\"
          [ -f \"$DEVICE_LAYERS\" ] && [ -s \"$DEVICE_LAYERS\" ] && cat \"$DEVICE_LAYERS\" >> build/conf/bblayers.conf || echo \"Skipping DEVICE_LAYERS\"
          [ -f \"$IMAGE_LAYERS\" ] && [ -s \"$IMAGE_LAYERS\" ] && cat \"$IMAGE_LAYERS\" >> build/conf/bblayers.conf || echo \"Skipping IMAGE_LAYERS\"
          echo \"=== Starting Bitbake build ===\"
          bitbake \"$IMAGE\" || echo \"Bitbake failed\"
        '

        echo '=== Build complete. Container is running for debugging. ==='
        bash
      "
