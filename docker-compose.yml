services:
  yocto-builder:
    image: ubuntu:22.04
    container_name: yocto
    platform: linux/amd64
    working_dir: /app
    env_file:
      - .env
    environment:
      REPO_URL: ${REPO_URL}
      DEVICE: ${DEVICE}
      IMAGE: ${IMAGE}
      DISTRO: ${DISTRO}
      DEBIAN_FRONTEND: noninteractive
      BB_NUMBER_THREADS: ${BB_NUMBER_THREADS}
      PARALLEL_MAKE: ${PARALLEL_MAKE}
    restart: unless-stopped
    tty: true
    stdin_open: true
    healthcheck:
      test: ["CMD", "bash", "-c", "ps aux | grep -v grep | grep -q bitbake || exit 1"]
      interval: 5m
      timeout: 5s
      retries: 3
    mem_limit: "12g"
    cpus: 6
    networks:
      - yocto_network
    shm_size: '2gb'
    command: >
      bash -c '
        mkdir -p /app/logs

        echo "=== Checking environment variables ===" | tee -a /app/logs/build.log
        if [ -z "$REPO_URL" ]; then echo "ERROR: REPO_URL is missing" | tee -a /app/logs/build.log; exit 1; fi
        if [ -z "$DEVICE" ]; then echo "ERROR: DEVICE is missing" | tee -a /app/logs/build.log; exit 1; fi
        if [ -z "$IMAGE" ]; then echo "ERROR: IMAGE is missing" | tee -a /app/logs/build.log; exit 1; fi
        if [ -z "$DISTRO" ]; then echo "ERROR: DISTRO is missing" | tee -a /app/logs/build.log; exit 1; fi

        echo "=== Installing dependencies ===" | tee -a /app/logs/build.log
        apt-get update && apt-get install -y --no-install-recommends \
          gawk wget git diffstat unzip texinfo gcc build-essential \
          chrpath socat cpio python3 python3-pip python3-pexpect xz-utils \
          debianutils iputils-ping python3-git python3-jinja2 libegl1-mesa \
          libsdl1.2-dev pylint python3-subunit mesa-common-dev zstd \
          liblz4-tool file locales ca-certificates \
          python3-dev libffi-dev libssl-dev \
          tmux vim sudo python3-setuptools \
          || { echo "Package install failed" | tee -a /app/logs/build.log; exit 1; }

        echo "=== Configuring locales ===" | tee -a /app/logs/build.log
        dpkg-reconfigure -f noninteractive locales && \
        locale-gen en_US.UTF-8 || { echo "Failed to configure locales" | tee -a /app/logs/build.log; exit 1; }
        export LANG=en_US.UTF-8

        echo "=== Creating yocto user ===" | tee -a /app/logs/build.log
        useradd -m -s /bin/bash yocto || echo "User already exists"
        mkdir -p /etc/sudoers.d
        echo "yocto ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/yocto
        chmod 0440 /etc/sudoers.d/yocto

        echo "=== Repository initialization/update ===" | tee -a /app/logs/build.log
        git clone --progress "$REPO_URL" repo || { echo "Git clone failed" | tee -a /app/logs/build.log; exit 1; }
        cd repo
        git config --global --add safe.directory /app/repo
        git submodule update --init --recursive || echo "Submodule update failed"

        chown -R yocto:yocto /app/repo /app/logs
        chmod -R 755 /app/repo

        echo "=== Running build as yocto user ===" | tee -a /app/logs/build.log
        su yocto -c "
          cd /app/repo
          export PATH=\"/home/yocto/.local/bin:$PATH\"
          export BB_ENV_PASSTHROUGH_ADDITIONS=\"DISTRO DEVICE IMAGE BB_NUMBER_THREADS PARALLEL_MAKE\"
          ROOT_DIR=$(pwd)
          # Dynamically find the conf/templates/default directory
          TEMPLATE_DIR=$(find \"$ROOT_DIR\" -maxdepth 2 -type d -path \"*/conf/templates/default\" | head -n 1)
          if [ -z \"$TEMPLATE_DIR\" ]; then
            echo \"ERROR: No conf/templates/default directory found in repo\" | tee -a /app/logs/build.log
            exit 1
          fi
          export TEMPLATECONF=\"$TEMPLATE_DIR\"
          echo \"Using TEMPLATECONF=$TEMPLATECONF\" | tee -a /app/logs/build.log
          echo \"=== Initializing build ===\" | tee -a /app/logs/build.log
          source ./poky/oe-init-build-env build || { echo \"Failed to initialize Yocto\" | tee -a /app/logs/build.log; exit 1; }
          
          echo \"=== Starting Bitbake build ===\" | tee -a /app/logs/build.log
          bitbake \"$IMAGE\" 2>&1 | tee -a /app/logs/build.log || echo \"Bitbake failed\" | tee -a /app/logs/build.log
        "

        echo "=== Build complete. Container is running for debugging. ===" | tee -a /app/logs/build.log
        tail -f /app/logs/build.log &
        bash
      '

networks:
  yocto_network:
    driver: bridge